const ChillBotCommand = require('../../structures/ChillBotCommand');
const { EmbedBuilder } = require('discord.js');

class UserCommand extends ChillBotCommand {
    constructor() {
        super('user', {
            description: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',
            category: 'info',
            usage: '[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]',
            cooldown: 3,
            aliases: ['u']
        });
    }

    async run(message, args) {
        const user = message.mentions.members.first() || message.guild.members.cache.get(args[0]) || message.member;
        const data = await message.client.database.collection('users').findOne({ id: user.id });
        try {
            const win = data.xo?.win || 0;
            const lose = data.xo?.lose || 0;
            message.reply({
                embeds: [
                    new EmbedBuilder()
                    .setTitle('–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                    .setColor(message.client.constants.colors.main)
                    .addFields(
                        [
                            {
                                name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ',
                                value: 
                                    `üìé | –¢–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \`${user.user.tag}\`\n` +
                                    `üÜî | ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \`${user.id}\`\n` +
                                    `üóìÔ∏è | –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: \`${new Date(user.user.createdAt).toISOString().replace('T', ' ').substring(0, 19)}\` (${message.client.functions.getDays(new Date(user.user.createdTimestamp))} –¥–Ω–µ–π –Ω–∞–∑–∞–¥)\n` +
                                    `üñºÔ∏è | –ê–≤–∞—Ç–∞—Ä–∫–∞: **[—Å—Å—ã–ª–∫–∞](${user.user.avatarURL({ size: 4096 })})**`
                            },
                            {
                                name: '–°–µ—Ä–≤–µ—Ä–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                                value: 
                                    `üñáÔ∏è | –ù–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: \`${user.nickname || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\`\n` +
                                    `üîå | –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª(–ª—Å—è/–∞—Å—å) –∫ —Å–µ—Ä–≤–µ—Ä—É: \`${new Date(user.joinedTimestamp).toISOString().replace('T', ' ').substring(0, 19)}\`\n` +
                                    `‚úâÔ∏è | –°–æ–æ–±—â–µ–Ω–∏–π: \`${(data?.messages ? data.messages : 0) + (message.client.messagecounter.raw[user.id] ? message.client.messagecounter.raw[user.id] : 0)}\`\n` +
                                    `‚ù§Ô∏è | –í –±—Ä–∞–∫–µ —Å: ${data.married ? (message.guild.members.cache.get(data.married) || `\`${data.married}\``) : '`-`'}\n` +
                                    `üèÖ | –ó–Ω–∞—á–∫–∏: ${!data ? '`–û—Ç—Å—É—Å—Ç–≤—É—é—Ç`' : data.badges.map((b) => message.client.constants.badges[b]).join(' / ') || '`–û—Ç—Å—É—Å—Ç–≤—É—é—Ç`'}`
                            },
                            {
                                name: '–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏',
                                value:
                                    `üìà | –ü–æ–±–µ–¥: \`${win}\`\n` +
                                    `üìâ | –ü–æ—Ä–∞–∂–µ–Ω–∏–π: \`${lose}\`\n` +
                                    `üíø | –ë—ã–ª–æ —Å—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: \`${data.xo?.all || 0}\`\n` +
                                    `üì∂ | W/L: \`${message.client.functions.formatWinLose(win, lose)}\``
                            }
                        ]
                    )
                    .setThumbnail(user.user.avatarURL())
                    .setFooter({ text: message.guild.name, iconURL: message.guild.iconURL({ dynamic: true }) })
                    .setTimestamp()
                ]
            });
        } catch(err) {
            console.error(err);
            message.client.loggingservice.error(err, message)
        }

        return;
    }
}

module.exports = UserCommand;